/*
Deployment script for 4347.003 - Group Project Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "4347.003 - Group Project Database"
:setvar DefaultFilePrefix "4347.003 - Group Project Database"
:setvar DefaultDataPath "C:\Users\Amin Kedwaii\AppData\Local\Microsoft\VisualStudio\SSDT\Database1"
:setvar DefaultLogPath "C:\Users\Amin Kedwaii\AppData\Local\Microsoft\VisualStudio\SSDT\Database1"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[Cart]...';


GO
CREATE TABLE [dbo].[Cart] (
    [Customer_id] INT NOT NULL,
    [Product_id]  INT NOT NULL,
    [Store_id]    INT NOT NULL
);


GO
PRINT N'Creating Table [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [Customer_id] INT           NOT NULL,
    [Card_no]     INT           NULL,
    [CVV]         INT           NULL,
    [First_name]  VARCHAR (255) NOT NULL,
    [Last_name]   VARCHAR (255) NOT NULL,
    [MiddleIinit] VARCHAR (1)   NULL,
    [Address]     VARCHAR (255) NOT NULL,
    CONSTRAINT [CSTMR_PK] PRIMARY KEY CLUSTERED ([Customer_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [Employee_id] INT           NOT NULL,
    [Manager_id]  INT           NULL,
    [Pay_rate]    INT           NOT NULL,
    [Store_id]    INT           NOT NULL,
    [First_name]  VARCHAR (255) NOT NULL,
    [Last_name]   VARCHAR (255) NOT NULL,
    [MiddleIinit] VARCHAR (1)   NULL,
    [Address]     VARCHAR (255) NOT NULL,
    CONSTRAINT [EMP_PK] PRIMARY KEY CLUSTERED ([Employee_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [Product_id]       INT           NOT NULL,
    [Store_id]         INT           NOT NULL,
    [Supplier_name]    VARCHAR (255) NOT NULL,
    [Product_type]     VARCHAR (255) NOT NULL,
    [Purchace_price]   INT           NOT NULL,
    [Sales_price]      INT           NOT NULL,
    [Amount_inventory] INT           NULL,
    CONSTRAINT [PRDCT_PK] PRIMARY KEY CLUSTERED ([Product_id] ASC, [Store_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Store]...';


GO
CREATE TABLE [dbo].[Store] (
    [Store_id]      INT           NOT NULL,
    [Manager_id]    INT           NOT NULL,
    [Num_employees] INT           NOT NULL,
    [Address]       VARCHAR (255) NOT NULL,
    CONSTRAINT [STR_PK] PRIMARY KEY CLUSTERED ([Store_id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[CRT_OWNER]...';


GO
ALTER TABLE [dbo].[Cart] WITH NOCHECK
    ADD CONSTRAINT [CRT_OWNER] FOREIGN KEY ([Customer_id]) REFERENCES [dbo].[Customer] ([Customer_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Cart]...';


GO
ALTER TABLE [dbo].[Cart] WITH NOCHECK
    ADD FOREIGN KEY ([Product_id], [Store_id]) REFERENCES [dbo].[Product] ([Product_id], [Store_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[EMP_MNGR_KEY]...';


GO
ALTER TABLE [dbo].[Employee] WITH NOCHECK
    ADD CONSTRAINT [EMP_MNGR_KEY] FOREIGN KEY ([Manager_id]) REFERENCES [dbo].[Employee] ([Employee_id]) ON DELETE SET NULL ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[EMP_WRKS_AT]...';


GO
ALTER TABLE [dbo].[Employee] WITH NOCHECK
    ADD CONSTRAINT [EMP_WRKS_AT] FOREIGN KEY ([Store_id]) REFERENCES [dbo].[Store] ([Store_id]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[SOLD_AT]...';


GO
ALTER TABLE [dbo].[Product] WITH NOCHECK
    ADD CONSTRAINT [SOLD_AT] FOREIGN KEY ([Store_id]) REFERENCES [dbo].[Store] ([Store_id]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[STR_MNGR_KEY]...';


GO
ALTER TABLE [dbo].[Store] WITH NOCHECK
    ADD CONSTRAINT [STR_MNGR_KEY] FOREIGN KEY ([Manager_id]) REFERENCES [dbo].[Employee] ([Employee_id]) ON UPDATE CASCADE;


GO
PRINT N'Creating View [dbo].[Storewithinventory]...';


GO
CREATE VIEW Storewithinventory
AS (SELECT Amount_inventory 
	FROM Store Join Product ON (Store.Store_id  = Product.Store_id)
)
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Employee] WITH CHECK CHECK CONSTRAINT [EMP_MNGR_KEY];

ALTER TABLE [dbo].[Employee] WITH CHECK CHECK CONSTRAINT [EMP_WRKS_AT];

ALTER TABLE [dbo].[Product] WITH CHECK CHECK CONSTRAINT [SOLD_AT];

ALTER TABLE [dbo].[Store] WITH CHECK CHECK CONSTRAINT [STR_MNGR_KEY];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Cart'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
